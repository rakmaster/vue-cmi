function plugin(e,t){var r=e.extend({template:"<div></div>",props:{mapdata:Object},data:function(){return this.mapdata}});e.component("v-map",r),e.map=new map,e.prototype.$cmi={load:function e(t){return"complete"===document.readyState?setTimeout(t,0):"interactive"===document.readyState?setTimeout(function(){e(t)},150):void document.addEventListener("DOMContentLoaded",t)},map:function(t,r){return e.map.draw(t,r)},layer:{getLayers:function(t){return e.map.getLayers(t)},getLayer:function(t){return e.map.getLayer(t)},getFeatures:function(t){return e.map.getFeatures(t)},getFeature:function(t,r){return e.map.getFeature(t,r)},draw:function(t){return e.map.layer(t)}},control:{animate:function(t){return e.map.animate(t)},panto:function(t){return e.map.panto(t)}}}}var openlayers;if(window.ol){openlayers=window.ol;var defaults={duration:500,styles:{stroke:{color:"rgba(0,0,0,1.0)",width:1},fill:{color:"rgba(0,80,180,1.0)"},text:{character:"ÔÅÅ",style:"normal",size:"18px",family:"FontAwesome",baseline:"Bottom"},image:null}},_stroke=function(e){return new openlayers.style.Stroke({color:e.color,width:e.width})},_fill=function(e){return new openlayers.style.Fill({color:e.color})},_text=function(e,t){return new openlayers.style.Text({text:e.character,font:e.style+" "+e.size+" '"+e.family+"'",textBaseline:e.baseline,fill:_fill(t)})},_arrange=function(e){var t={};for(var r in __WEBPACK_IMPORTED_MODULE_0__defaults__.a.styles)t[r]=__WEBPACK_IMPORTED_MODULE_0__defaults__.a.styles[r];for(var n in e)if(t[n])if(null!==e[n])for(var o in e[n])t[n][o]=e[n][o];else t[n]=e[n];return t},_style=function(e){var t=_arrange(e),r={};return{Point:function(e){return e.image&&(r.image=e.image),e.text&&(r.text=_text(e.text,e.fill)),new openlayers.style.Style(r)},LineString:function(e){return e.stroke&&(r.stroke=_stroke(e.stroke)),new openlayers.style.Style(r)},MultiLineString:function(e){return e.stroke&&(r.stroke=_stroke(e.stroke)),new openlayers.style.Style(r)},MultiPoint:function(e){return e.image&&(r.image=e.image),e.font&&(r.text=_text(e.text,e.fill)),new openlayers.style.Style(r)},MultiPolygon:function(e){return e.stroke&&(r.stroke=_stroke(e.stroke)),e.fill&&(r.fill=_fill(e.fill)),new openlayers.style.Style(r)},Polygon:function(e){return e.stroke&&(r.stroke=_stroke(e.stroke)),e.fill&&(r.fill=_fill(e.fill)),new openlayers.style.Style(r)},GeometryCollection:function(e){return e.stroke&&(r.stroke=_stroke(e.stroke)),e.fill&&(r.fill=_fill(e.fill)),new openlayers.style.Style(r)},Circle:function(e){return e.stroke&&(r.stroke=_stroke(e.stroke)),e.fill&&(r.fill=_fill(e.fill)),new openlayers.style.Style(r)}}[e.type](t)},_view=function(e,t){return new openlayers.View({center:openlayers.proj.fromLonLat(e),zoom:t})},_extents=function(e){var t=openlayers.extent.boundingExtent(e);return openlayers.proj.transformExtent(t,openlayers.proj.get("EPSG:4326"),openlayers.proj.get("EPSG:3857"))},_source={__feature:function(e,t,r){var n={};return n.geometry=e,t&&(n.style=t),r&&(n.state=r),new openlayers.Feature(n)},__attributions:function(e){var t=[];if(e)if(Array.isArray(e))for(var r in e)t.push(new openlayers.Attribution({html:e[r]}));else{var n=new openlayers.Attribution({html:e});t.push(n)}return t},__normalize:function(e){return openlayers.proj.transform(e,"EPSG:4326","EPSG:3857")},_point:function(e){var t,r,n,o;if(Array.isArray(e)?t=e:(t=e.coordinates,e.state&&(o=e.state)),void 0!==e.style)if(e.style.method){var s=e.style.method;n=_source.__feature(new openlayers.geom.Point(_source.__normalize(t)),s,"inactive")}else(r=e.style).type="Point",r=_style(r),n=_source.__feature(new openlayers.geom.Point(_source.__normalize(t)),r,o);else n=_source.__feature(new openlayers.geom.Point(_source.__normalize(t)),null,o);return n},_shape:function(e){for(var t=[],r=0;r<e.coordinates.length;r++)t.push(_source._normalize(e.coordinates[r]));return _source._feature(new openlayers.geom.Polygon([t]))},_xyz:function(e){var t,r;return e.attributions&&(t=_source.__attributions(e.attributions)),!!e.url&&(r=e.url,{attributions:t,url:r})},_image:function(e){var t,r,n=_source.shape(e.coordinates).getExtent();return e.attributions&&(t=_source.__attributions(e.attributions)),!!e.url&&(r=e.url,{attributions:t,url:r,imageExtent:n})},_radius:function(e){var t=e.radius,r=[];r.degrees=1/69.048,r.dd=r.degrees,r.m=1609.344,r.ft=5280,r.km=1.609344,r.mi=1,r.inches=63360;var n=t*r[e.units]*.70710678,o=_source._normalize(e.coordinates);return _source._feature(new openlayers.geom.Circle(o,n))},default:function(){return new openlayers.source.OSM},xyz:function(e){return new openlayers.source.XYZ(_source._xyz(e))},image:function(e){return new openlayers.source.ImageStatic(_source._image(e))},point:function(e){var t=[_source._point(e)];return new openlayers.source.Vector(t)},shape:function(e){var t=[_source._shape(e)];return new openlayers.source.Vector(t)},radius:function(e){var t=[_source._radius(e)];return new openlayers.source.Vector(t)},multi:function(e){for(var t={},r=[],n=0;n<e.length;n++){var o=_source["_"+e[n].type];r.push(o(e[n]))}return t.features=r,new openlayers.source.Vector(t)},geojson:function(e){var t;return null!==e&&"object"==typeof e?t=new openlayers.source.Vector({features:(new openlayers.format.GeoJSON).readFeatures(e),format:new ol.format.GeoJSON}):"string"==typeof e&&(t=new openlayers.source.Vector({url:e,format:new ol.format.GeoJSON})),t}},_layer={draw:function(e){return e?(0,this[e.type])(e.name,e.src):new openlayers.layer.Tile({name:"base",source:_source.default()})},tile:function(e,t){var r={};return r.name=e,r.source=_source.xyz(t),new openlayers.layer.Tile(r)},image:function(e,t){var r={};return r.name=e,r.source=_source.image(t),new openlayers.layer.Image(r)},shape:function(e,t){var r={};return r.name=e,r.source=_source.shape(t),t.style?r.style=_style(t.style):r.style=_style({type:"Polygon"}),new openlayers.layer.Vector(r)},radius:function(e,t){var r={};return r.name=e,r.source=_source.radius(t),t.style?r.style=_style(t.style):r.style=_style({type:"Polygon"}),new openlayers.layer.Vector(r)},geojson:function(e,t){var r={};return r.name=e,r.source=_source.geojson(t.coordinates),t.style?r.style=_style(t.style):r.style=_style({type:"MultiPolygon"}),new ol.layer.Vector(r)},multi:function(e,t){var r={};return r.name=e,r.source=_source.multi(t),t.style?t.style.method?r.style=t.style.method:r.style=_style(t.style):r.style=_style({type:"Polygon"}),new openlayers.layer.Vector(r)},group:function(e,t){var r=[];for(var n in t){var o=_layer[t[n].type];r.push(o(t[n].name,t[n].src))}return new openlayers.layer.Group({name:e,layers:r})},empty:function(e,t){var r={};return r.name=e,t&&(r.source=t),new openlayers.layer.Vector(r)}},map=function(){this.ol={},this.target="",this.center=[0,0],this.zoom=4,this.extents=[],this.layers=[],this.defaults=defaults};map.prototype.draw=function(e,t){if(!e)return!1;if(this.target=e,t){if(t.center&&(this.center=t.center),t.zoom&&(this.zoom=t.zoom),t.extents&&(this.extents=_extents(t.extents)),t.styles)for(var r in t.styles)if(this.defaults.styles[r]){var n=t.styles[r];for(var o in n)this.defaults.styles[r][o]=n[o]}t.base?this.layers.push(_layer.draw(t.base)):this.layers.push(_layer.draw())}else this.layers.push(_layer.draw());var s={target:this.target,layers:this.layers,view:_view(this.center,this.zoom)};return t&&!1===t.controls&&(s.controls=openlayers.control.defaults({zoom:!1,attribution:!1,rotate:!1})),this.ol=new openlayers.Map(s),t.extents&&this.ol.getView().fit(this.extents,this.ol.getSize()),this.ol},map.prototype.getLayers=function(e){var t=[];return e?this.layers.forEach(function(e){e instanceof openlayers.layer.Group||t.push(e)}):this.layers.forEach(function(e){e instanceof openlayers.layer.Group?e.getLayers().forEach(function(e){t.push(e)}):t.push(e)}),t},map.prototype.getLayer=function(e){var t=[];return this.getLayers().forEach(function(r){e===r.get("name")&&(t=r)}),t},map.prototype.getFeatures=function(e){return this.getLayer(e).getSource().getFeatures(extent)},map.prototype.getFeature=function(e,t){return this.getLayer(e).getSource().getClosestFeatureToCoordinate(t)},map.prototype.layer=function(e){e.defaultStyle=this.defaults.styles.pointStyle;var t=_layer.draw(e);return this.layers.push(t),this.ol.addLayer(t),t},map.prototype.animate=function(e,t){var r=[];e.getLayers().forEach(function(e){r.push(e)});for(var n=0,o=1;o<r.length;o++)r[o].setVisible(!1);setInterval(function(){r[n].setVisible(!r[n].getVisible()),++n===r.length&&(n=0),r[n].setVisible(!r[n].getVisible())},t)},map.prototype.panto=function(e){if(e.extents){var t=_extents(e.extents);this.ol.getView().fit(t,{duration:this.duration})}e.zoom&&this.ol.getView().animate({center:openlayers.proj.fromLonLat(e.center),duration:e.duration,zoom:e.zoom})},"undefined"!=typeof window&&window.Vue&&window.Vue.use(plugin)}else console.log("NOAA CMI Requires Openlayers 4.0.1");
